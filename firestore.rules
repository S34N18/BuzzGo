rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Users collection - users can only read/write their own data, admins can read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Categories collection - anyone can read, only admins can write
    match /categories/{document} {
      allow read: if true; // Public reading for all users to see categories
      allow write: if isAdmin(); // Only admins can create/edit categories
    }
    
    // Events collection - public reading, authenticated writing with validation
    match /events/{document} {
      allow read: if true; // Public reading so everyone can see events
      allow create: if isAuthenticated() && 
                       request.resource.data.organizerId == request.auth.uid &&
                       request.resource.data.keys().hasAll(['title', 'description', 'startDate', 'endDate', 'categoryId', 'organizerId', 'isActive']) &&
                       request.resource.data.title is string &&
                       request.resource.data.title.size() > 0 &&
                       request.resource.data.description is string &&
                       request.resource.data.isActive == true; // Ensure new events are active by default
      
      allow update: if isAuthenticated() && 
                       (resource.data.organizerId == request.auth.uid || isAdmin()) &&
                       request.resource.data.organizerId == resource.data.organizerId; // Can't change organizer
      
      allow delete: if isAuthenticated() && 
                       (resource.data.organizerId == request.auth.uid || isAdmin());
    }
    
    // Payments collection - users can only see their own payments, admins can see all
    match /payments/{document} {
      allow read: if isAuthenticated() && 
                     (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin(); // Only admins can update payment status
      allow delete: if isAdmin(); // Only admins can delete payments
    }
    
    // Analytics collection - only admins can read/write
    match /analytics/{document} {
      allow read, write: if isAdmin();
    }
    
    // App settings/configuration - only admins
    match /settings/{document} {
      allow read: if true; // Some settings might need to be public (like app version)
      allow write: if isAdmin();
    }
  }
}
